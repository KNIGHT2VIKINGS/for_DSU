1) HELLO

#include <cs50.h>
#include <stdio.h>

int main(void)
{
    string x = get_string("What's your name ?");
    printf("Hello, %s\n", x);
}

_____________________________________________________________________________________________________________________________________________________________________________
2) MEOW

#include<cs50.h>
#include<stdio.h>

int main(void)
{
    int x = get_int("How many times you want meow: ");
    int counter = x;
    while (counter > 0)
    {
        printf("meow\n");
        counter--;
    }
}
___________________________________________________________________________________________________________________________________________________-__________
3) MEOW MEOW

#include<cs50.h>
#include<stdio.h>

void meow(int n);

int main(void)
{
    meow(30000);
}

void meow(int n)
{
    for(int i = 0; i < n; i++)
        printf("meow\n");
}
_____________________________________________________________________________________________________________________________________________________________________
4)  MODERN HELLO

#include <cs50.h>
#include <stdio.h>

int main(void)
{
    string answer = get_string("whats your name ? ");
    printf("hello, %s\n",answer);

    int answer2 = get_int("whats your age ? ");

    if (answer2 <= 12)
    {
        printf("you are eligible for children programme\n");
    }
    if(answer2 > 12 && answer2 < 18)
    {
        printf("you are eligible for teens programme\n");
    }
    if(answer2 >= 18 && answer2 <= 40)
    {
        printf("you are eligible for adults programme\n");
    }
    if(answer2 > 40)
    {
        printf("you are not eligible for any programme\n");
    }
}
________________________________________________________________________________________________________________________________________________________________
5) CAL C
#include <cs50.h>
#include <stdio.h>

int main(void)
{
    printf("welcome to calculator\n");
    int X = get_int("X: ");
    int Y = get_int("Y: ");

    // double for 64-bit and float for 32-bit
    float Z = (float) X / (float) Y;
    // .9 for specific 9 decimal
    printf("%.9f\n", Z);
}
_____________________________________________________________________________________________________________________________________________________________________
6) CALC 

#include <cs50.h>
#include <stdio.h>

int add(int a, int b);

int main(void)
{
    printf("welcome to calculator\n");
    int X = get_int("X:- ");
    int Y = get_int("Y:- ");

    printf("sum of X and Y is: %i\n", add(X, Y));
}

int add(int a, int b)
{
    return a + b;
}
____________________________________________________________________________________________________________________________________________________________________________
7) AGREE 

#include<cs50.h>
#include<stdio.h>

int main(void)
{
    char c = get_char("do you agree ??");

    if (c == 'y' || c == 'Y')
    {
        printf("agreed.\n");
    }
    else if (c == 'n' || c == 'N')
    {
        printf("not agreed.\n");
    }
}
______________________________________________________________________________________________________________________________________________________________________________
9) MARIO LESS.

#include <cs50.h>
#include <stdio.h>

void print_row(int spaces, int brics);
int main(void)
{
    // prompt  the user for height of pyramid
    int n;
    do
    {
        n = get_int("Height: ");
    }
    while (n < 1);

    // print a pyramid of that heigth

    for (int i = 0; i < n; i++)
    {
        // print row of brick
        print_row(n - i - 1, i + 1);
    }
}
void print_row(int spaces, int bricks)
{
    // print spaces
    for (int i = 0; i < spaces; i++)
    {
        printf(" ");
    }

    // print bricks
    for (int i = 0; i < bricks; i++)
    {
        printf("#");
    }
    printf("\n");
}

_________________________________________________________________________________________________________________________________________________________

10) CASH
#include <cs50.h>
#include <stdio.h>

int calculate_quarters(int cents);
int calculate_dimes(int cents);
int calculate_nickels(int cents);
int calculate_pennies(int cents);

int main(void)
{
    // prompt the user for change owed in cents
    int cents;
    do
    {
        cents = get_int("change owed: ");
    }
    while (cents < 0);

    // calculate how many quarters you should give the costomer
    int quarters = calculate_quarters(cents);
    // subtract the value of those quarters form cents
    cents = cents - (quarters * 25);

    // calculate how many dimes you should give the costomer
    int dimes = calculate_dimes(cents);
    // subtract the value of those dimes form remaining cents
    cents = cents - (dimes * 10);

    // calculate how many nickels you should give the costomer
    int nickels = calculate_nickels(cents);
    // subtract the value of those nickels form remaining cents
    cents = cents - (nickels * 5);

    // calculate how many pennies you should give the costomer
    int pennies = calculate_pennies(cents);
    // subtract the value of those pennies form remaining cents
    cents = cents - (pennies);

    // sum the number of quarters, dimes, nickels and pennies used
    int sum = quarters + dimes + nickels + pennies;
    // print that sum
    printf("%i\n", sum);
}

int calculate_quarters(int cents)
{
    int quarters = 0;
    while (cents >= 25)
    {
        quarters++;
        cents = cents - 25;
    }
    return quarters;
}

int calculate_dimes(int cents)
{
    int dimes = 0;
    while (cents >= 10)
    {
        dimes++;
        cents = cents - 10;
    }
    return dimes;
}

int calculate_nickels(int cents)
{
    int nickels = 0;
    while (cents >= 5)
    {
        nickels++;
        cents = cents - 5;
    }
    return nickels;
}

int calculate_pennies(int cents)
{
    int pennies = 0;
    while (cents >= 1)
    {
        pennies++;
        cents = cents - 1;
    }
    return pennies;
}

_____________________________________________________________________________________________________________________________________________________________________
11) ARRAY OF WORDS
#include <cs50.h>
#include <stdio.h>

int main(void)
{
    string words[2];

    words[0] = "HI!";
    words[1] = "BYE!";

    printf("%c %c %c\n", words[0][0], words[0][1], words[0][2]);
    printf("%c %c %c %c\n", words[1][0], words[1][1], words[1][2], words[1][3]);
}
__________________________________________________________________________________________________________________________________________________________________________
12_ ARRAY OF CHAR
#include <cs50.h>
#include <stdio.h>

int main(void)
{
    string words[2];

    words[0] = "HI!";
    words[1] = "BYE!";

    printf(" %i %i %i %i %i %i\n", words[0][0], words[0][1], words[0][2], words[0][3], words[0][4], words[0][5]);
    printf(" %c %c %c %c\n", words[1][0], words[1][1], words[1][2], words[1][3]);
}
________________________________________________________________________________________________________________________________________________________________________________
13) array of chars 2
#include <cs50.h>
#include <stdio.h>

int main(void)
{
    string words[2];

    words[0] = "HI!";
    words[1] = "BYE!";

    printf(" %i %i %i %i\n", words[0][0], words[0][1], words[0][2], words[0][3]);
    printf(" %c %c %c %c\n", words[1][0], words[1][1], words[1][2], words[1][3]);
}
__________________________________________________________________________________________________________________________________________________________________________________
14) SCORES
#include <stdio.h>
#include <cs50.h>

int main(void)
{
    int scores[3];
    scores[0] = get_int("scores: ");
    scores[1] = get_int("scores: ");
    scores[2] = get_int("scores: ");

    printf("Average: %f\n", (scores[0] + scores[1] + scores[2]) / 3.0);
}
__________________________________________________________________________________________________________________________________________________________________________________
15) SCORES
#include <stdio.h>
#include <cs50.h>

int main(void)
{
    const int N = 3;
    int scores[N];
    for(int i = 0; i < N; i++)
    {
        scores[i] = get_int("score: ");
    }
    printf("Average: %f\n", (scores[0] + scores[1] + scores[2]) / (float) N);
}
_______________________________________________________________________________________________________________________________________________________________________________
16) AVERAGES USING ARRAYS
// averages three numbers using an array, a constant, and a helper function

#include <cs50.h>
#include <stdio.h>

// constant
const int N = 3;

// prototype
float average(int length, int array[]);

int main(void)
{
    // get scores
    int scores[N];
    for (int i = 0; i < N; i++)
    {
        scores[i] = get_int("score: ");
    }

    // print average
    printf("Average: %f\n", average(N, scores));
}

float average(int length, int array[])
{
    // calculate average
    int sum = 0;
    for (int i = 0; i < length; i++)
    {
        sum += array[i];
    }
    return sum / (float) length;
}
____________________________________________________________________________________________________________________________________________________________________________
17) strings
#include <cs50.h>
#include <stdio.h>
#include <string.h>

int main(void)
{
    string s = get_string("INPUT: ");
    printf("OUTPUT: ");
    for (int i = 0, n = strlen(s); i < n; i++)
    {
        printf("%c", s[i]);
    }
    printf("\n");
}
_________________________________________________________________________________________________________________________________________________________________________
18)  command line argument
#include <cs50.h>
#include <stdio.h>

int main(int argc, string argv[])
{
    if (argc != 2)
    {
        printf("Missing command-line argument\n");
        return 1;
    }
    printf("hello, %s\n", argv[1]);
    return 0;
}
______________________________________________________________________________________________________________________________________________________________________________

19) string length
#include <cs50.h>
#include <stdio.h>
#include <string.h>

int main(void)
{
    string name = get_string("Name: ");
    int length = strlen(name);
    printf("%i\n", length);
}
_________________________________________________________________________________________________________________________________________________________________________________
20) debugg 50
#include <stdio.h>
#include <cs50.h>

void print_column(int height);

int main(void)
{
    int h = get_int("Height:");
    print_column(h);
}

void print_column(int height)
{
    for (int i = 0; i <= height; i++)
    {
        printf("#\n");
    }
}
________________________________________________________________________________________________________________________________________________________________________________
21) SCRABBLE

#include <cs50.h>
#include <ctype.h>
#include <stdio.h>
#include <string.h>

int POINTS[] = {1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 5, 1, 3, 1, 1, 3, 10, 1, 1, 1, 1, 4, 4, 8, 4, 10};
int compute_score(string word);

int main(void)
{
    // prompt user for two words
    string word1 = get_string("Player 1: ");
    string word2 = get_string("Player 2: ");

    // compute score
    int score1 = compute_score(word1);
    int score2 = compute_score(word2);
    // print winner

    if (score1 > score2)
    {
        printf("Player 1 wins!\n");
    }
    else if (score1 < score2)
    {
        printf("Player 2 wins!\n");
    }
    else
    {
        printf("Tie!\n");
    }
}

int compute_score(string word)
{
    // compute and return score for word
    int score = 0;
    for (int i = 0, len = strlen(word); i < len; i++)
    {
        if (isupper(word[i]))
        {
            score += POINTS[word[i] - 'A'];
        }
        else if (islower(word[i]))
        {
            score += POINTS[word[i] - 'a'];
        }
    }

    return score;
}
______________________________________________________________________________________________________________________________________________________________________-
22) ascii drawing
$ cowsay -f dragon hello
______________________________________________________________________________________________________________________________________________________________

23) CREDIT CARD LUHN ALGORITM
#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <stdlib.h>

bool luhn_check(const char *card_number);
void identify_card(const char *card_number);

int main() {
    char card_number[20];

    printf("Enter the credit card number: ");
    scanf("%s", card_number);

    if (luhn_check(card_number)) {
        printf("The card number is valid.\n");
        identify_card(card_number);
    } else {
        printf("The card number is invalid.\n");
    }

    return 0;
}

bool luhn_check(const char *card_number) {
    int sum = 0;
    int length = strlen(card_number);
    int double_digit = 0;

    for (int i = length - 1; i >= 0; i--) {
        int digit = card_number[i] - '0';

        if (double_digit) {
            digit *= 2;
            if (digit > 9) digit -= 9;
        }

        sum += digit;
        double_digit = !double_digit;
    }

    return (sum % 10 == 0);
}

void identify_card(const char *card_number) {
    int length = strlen(card_number);
    int first_digit = card_number[0] - '0';
    int first_two_digits = (card_number[0] - '0') * 10 + (card_number[1] - '0');

    if (length == 15 && (first_two_digits == 34 || first_two_digits == 37)) {
        printf("Card Type: American Express\n");
    } else if (length == 16 && (first_two_digits >= 51 && first_two_digits <= 55)) {
        printf("Card Type: MasterCard\n");
    } else if ((length == 13 || length == 16) && first_digit == 4) {
        printf("Card Type: Visa\n");
    } else {
        printf("Card Type: Other/Unknown\n");
    }
}
_______________________________________________________________________________________________________________________________________________________________________________
